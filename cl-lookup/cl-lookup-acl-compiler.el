(require 'cl-lookup)
(defvar cl-lookup-acl-operators-compiler-root "http://www.franz.com/support/documentation/8.2/doc/operators/compiler/")
(defvar cl-lookup-acl-variables-compiler-root "http://www.franz.com/support/documentation/8.2/doc/variables/compiler/")
(defvar cl-lookup-acl-classes-compiler-root "http://www.franz.com/support/documentation/8.2/doc/classes/compiler/")

(mapc #'(lambda (entry)
	  (destructuring-bind (name path) entry
	    (let ((symbol (intern (downcase name) cl-lookup-obarray)))
	      (if (boundp symbol)
		  (pushnew path (symbol-value symbol) :test #'equal)
		  (set symbol `(,path))))))
      '(
        ("compiler:*cltl1-compile-file-toplevel-compatibility-p*" (cl-lookup-acl-variables-compiler-root "s_cltl1-compile-file-toplevel-compatibility-p_s.htm"))
        ("compiler:call-compiler-optimization-switch" (cl-lookup-acl-operators-compiler-root "call-compiler-optimization-switch.htm"))
        ("compiler:compile-format-strings-switch" (cl-lookup-acl-variables-compiler-root "compile-format-strings-switch.htm"))
        ("compiler:declared-fixnums-remain-fixnums-switch" (cl-lookup-acl-variables-compiler-root "declared-fixnums-remain-fixnums-switch.htm"))
        ("compiler:generate-accurate-x86-float-code-switch" (cl-lookup-acl-variables-compiler-root "generate-accurate-x86-float-code-switch.htm"))
        ("compiler:generate-call-count-code-switch" (cl-lookup-acl-variables-compiler-root "generate-call-count-code-switch.htm"))
        ("compiler:generate-inline-call-tests-switch" (cl-lookup-acl-variables-compiler-root "generate-inline-call-tests-switch.htm"))
        ("compiler:generate-interrupt-checks-switch" (cl-lookup-acl-variables-compiler-root "generate-interrupt-checks-switch.htm"))
        ("compiler:internal-optimize-switch" (cl-lookup-acl-variables-compiler-root "internal-optimize-switch.htm"))
        ("compiler:list-call-direct-possibilities" (cl-lookup-acl-operators-compiler-root "list-call-direct-possibilities.htm"))
        ("compiler:optimize-fslot-value-switch" (cl-lookup-acl-variables-compiler-root "optimize-fslot-value-switch.htm"))
        ("compiler:optimize-large-functions-switch" (cl-lookup-acl-variables-compiler-root "optimize-large-functions-switch.htm"))
        ("compiler:peephole-optimize-switch" (cl-lookup-acl-variables-compiler-root "peephole-optimize-switch.htm"))
        ("compiler:save-arglist-switch" (cl-lookup-acl-variables-compiler-root "save-arglist-switch.htm"))
        ("compiler:save-local-names-switch" (cl-lookup-acl-variables-compiler-root "save-local-names-switch.htm"))
        ("compiler:save-local-scopes-switch" (cl-lookup-acl-variables-compiler-root "save-local-scopes-switch.htm"))
        ("compiler:save-source-level-debug-info-switch" (cl-lookup-acl-variables-compiler-root "save-source-level-debug-info-switch.htm"))
        ("compiler:tail-call-non-self-merge-switch" (cl-lookup-acl-variables-compiler-root "tail-call-non-self-merge-switch.htm"))
        ("compiler:tail-call-self-merge-switch" (cl-lookup-acl-variables-compiler-root "tail-call-self-merge-switch.htm"))
        ("compiler:trust-declarations-switch" (cl-lookup-acl-variables-compiler-root "trust-declarations-switch.htm"))
        ("compiler:trust-dynamic-extent-declarations-switch" (cl-lookup-acl-variables-compiler-root "trust-dynamic-extent-declarations-switch.htm"))
        ("compiler:trust-table-case-argument-switch" (cl-lookup-acl-variables-compiler-root "trust-table-case-argument-switch.htm"))
        ("compiler:verify-argument-count-switch" (cl-lookup-acl-variables-compiler-root "verify-argument-count-switch.htm"))
        ("compiler:verify-car-cdr-switch" (cl-lookup-acl-variables-compiler-root "verify-car-cdr-switch.htm"))
        ("compiler:verify-funcalls-switch" (cl-lookup-acl-variables-compiler-root "verify-funcalls-switch.htm"))
        ("compiler:verify-non-generic-switch" (cl-lookup-acl-variables-compiler-root "verify-non-generic-switch.htm"))
        ("compiler:verify-stack-switch" (cl-lookup-acl-variables-compiler-root "verify-stack-switch.htm"))
        ("compiler:verify-symbol-value-is-bound-switch" (cl-lookup-acl-variables-compiler-root "verify-symbol-value-is-bound-switch.htm"))
        ("compiler:verify-type-declarations-switch" (cl-lookup-acl-variables-compiler-root "verify-type-declarations-switch.htm"))
        ))

(provide 'cl-lookup-acl-compiler)